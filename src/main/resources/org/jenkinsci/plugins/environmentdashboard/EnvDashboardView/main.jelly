<?xml version="1.0"?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
<link href="${rootURL}/plugin/environment-dashboard/css/bootstrap.min.css" type="text/css" rel="stylesheet"/>
<link href="${rootURL}/plugin/environment-dashboard/css/bootstrap-theme.min.css" type="text/css" rel="stylesheet"/>
<link href="${rootURL}/plugin/environment-dashboard/css/blink.css" type="text/css" rel="stylesheet"/>
<link href="${rootURL}/plugin/environment-dashboard/css/dropdown_button.css" type="text/css" rel="stylesheet"/>
<link href="${rootURL}/plugin/environment-dashboard/css/dynamic_dialog.css" type="text/css" rel="stylesheet"/>
<link href="${rootURL}/plugin/environment-dashboard/css/jquery.datetimepicker.css" type="text/css" rel="stylesheet"/>
<script src="${rootURL}/plugin/environment-dashboard/js/jquery.datetimepicker.full.min.js"></script>
<script src="${rootURL}/plugin/environment-dashboard/js/jquery.validate.js"></script>
<div class="overlay" style="display:none; background-color: rgba(0, 0, 0, 0.4); position:absolute; top: 0; left:0; bottom:0; right:0;" onclick="hideAll()"></div>
<div class="popup" id="popup" style="position: absolute; width: 300px; height:150; display:none; background-color: white; text-align: center; top:50%; left:50%; margin-left: -150px; margin-top: -75;"></div>
<div id="startDashboard" style="margin-left: -360px; margin-right: 360px;">
	<input type="text" id="searchInput" style="width: 100%; font-size: 16px; padding: 12px 20px 12px 40px; border: 1px solid #ddd; margin-bottom: 12px;" onkeyup="filterTable()" placeholder="Search for clients.." title="Type in a client"/>
	<table id="envDashboard" class="table table-bordered table-striped table-condensed">
		<tbody>
			<j:switch on="${it.anyJobsConfigured()}">
				<j:case value="NONE">
					<tr>
						<div class="jumbotron">
							<h2>Hi, there!</h2>
							<p>You possibly haven't set up any jobs to use the Dashboard. Or if you have, the job hasn't run atleast once. You can configure the jobs by using the 'Details for Environment Dashboard' checkbox.</p>
						</div>
					</tr>
				</j:case>
				<j:case value="ENVS">
					<tr align="center">
						<th/>
						<j:set var="orderOfEnvs" value="${it.getOrderOfEnvs()}"/>
						<j:set var="orderOfComps" value="${it.getOrderOfComps()}"/>
						<j:set var="customColumnsList" value="${it.getCustomDBColumns()}"/>
						<j:set var="tags" value="${it.getOrderOfTags()}"/>


						<j:forEach items="${orderOfEnvs}" var="envsHeader">
							<th style="text-align:center">
								<a style="text-decoration:none" title="View environment history" id="${envsHeader}_Header" href="javascript:toggle('${envsHeader}_History');">${envsHeader}</a>
								<div id="${envsHeader}_History" style="display: inline-block; position: fixed; top: 100; bottom: 100; left: 0; right: 0; width: 900px; height: 600px; position:fixed; margin: auto; padding: 10px; background-color: #FEFEFE; border: 1px solid; border-color: #DDDDDD; box-shadow: 1px 2px 1px #AAAAAA; border-radius: 15px; display:none; overflow: auto; overflow-x:hidden;">
									<div align="right">
										<b onclick="javascript:hideAll()" style="cursor: pointer">[X]</b>
									</div>
									<h3>${envsHeader}</h3>
									 <table class="table table-bordered table-striped table-condensed">
										<j:set var="limitDeploy" value="${it.getLimitDeployHistory()}"/>
										<tbody>
											<th style="text-align:center">Component</th>
											<th style="text-align:center">Build</th>

											<j:set var="hasPackageColumn" value="${false}"/>
											<j:forEach items="${it.getDeployments(envsHeader, limitDeploy)}" var="time">
												<j:if test="${it.getCompDeployed(envsHeader,time).get('packageName') != null &amp;&amp; !it.getCompDeployed(envsHeader,time).get('packageName').equals('')}">
													<j:set var="hasPackageColumn" value="${true}"/>
												</j:if>
											</j:forEach>
											<j:if test="${hasPackageColumn}">
												<th style="text-align:center">Package</th>
											</j:if> 
											<th style="text-align:center">Last Update</th>
										</tbody>
										<j:forEach items="${it.getDeployments(envsHeader, limitDeploy)}" var="time">
										<j:set var="deployment" value="${it.getCompDeployed(envsHeader,time)}"/>
											<tr>
												<td>${deployment.get("compName")}</td>
												<td>
													<j:switch on="${deployment.get('buildstatus')}">
														<a title="View" href="${deployment.get('buildJobUrl')}">${deployment.get("buildNum")}</a>
														<j:case value="SUCCESS">
															<span title="SUCCESS" style="color:green;">&#10004;</span>
														</j:case>
														<j:case value="FAILURE">
															<span title="FAILURE" style="color:darkred;">&#x2716;</span>
														</j:case>
														<j:case value="RUNNING">
															<span title="RUNNING" style="color:blue;">&#9658;</span>
														</j:case>
														<j:default>
															<span title="UNKNOWN" style="color:orange;">&#63;</span>
														</j:default>
													</j:switch>
												</td>
												<j:if test="${hasPackageColumn}">
													<td>
														${deployment.get("packageName")}
													</td>
												</j:if>
												<td>
													<a title="View Deployment" href="${deployment.get('jobUrl')}">${it.getNiceTimeStamp(time)}</a>
												</td>
											</tr>
										</j:forEach>
									</table>
								</div>

								<!-- Popup per Env per Component  -->
								<j:forEach items="${orderOfComps}" var="comp">
									<j:set var="compLastDeployed" value="${it.getCompLastDeployed(envsHeader, comp)}"/>
									<div id="${comp}_${envsHeader}_Popup" style="display: inline-block; position: fixed; top: 100; bottom: 100; left: 0; right: 0; width: 900px; height: 600px; position:fixed; margin: auto; padding: 10px; background-color: #FEFEFE; border: 1px solid; border-color: #DDDDDD; box-shadow: 1px 2px 1px #AAAAAA; border-radius: 15px; display:none; overflow: auto; overflow-x:hidden;">
										<div align="right">
											<b onclick="javascript:hideAll()" style="cursor: pointer">[X]</b>
										</div>
										<h3>${comp + "   |   " + envsHeader}</h3>
										 <table style="width=100%" class="table table-bordered table-striped table-condensed">
											<tbody>
												<th style="width: 8%;text-align:center">Build</th>
												<j:if test="${compLastDeployed.get('packageName') != null &amp;&amp; !compLastDeployed.get('packageName').equals('')}">
													<th style="text-align:center">Package</th>
												</j:if>
												<j:forEach items="${customColumnsList}" var="column">
													<j:if test="${compLastDeployed.get(column.toLowerCase()) != null}">
														<th style="text-align:center">${column.substring(0, 1).toUpperCase() + column.substring(1)}</th>
													</j:if>
												</j:forEach>
												<th style="width:8%;text-align:center">Action</th>
												<th style="width:8%;text-align:center">Status</th>
												<th style="text-align:center">Time</th>
											</tbody>
											
											<j:forEach items="${it.getDeploymentsByCompEnv(comp, envsHeader, limitDeploy)}" var="deployment">
													<tr>
														<td >
															<a title="View Deployment" href="${deployment.get('jobUrl')}">${deployment.get('buildNum')}</a>
														</td>
														<j:if test="${compLastDeployed.get('packageName') != null &amp;&amp; !compLastDeployed.get('packageName').equals('')}">
															<td style="word-wrap:break-word">
																${deployment.get('packageName')}
															</td>
														</j:if>
														<j:forEach items="${customColumnsList}" var="column">
															<j:if test="${compLastDeployed.get(column.toLowerCase()) != null}">
																<td style="max-width:20em;word-wrap:break-word">
																	${deployment.get(column.toLowerCase())}
																</td>
															</j:if>
														</j:forEach>
														<td>
														  <code>
															
																															<head>
																<style>									
																a.disabled {
																  color:grey;
																}
																</style>
															   </head>
																<j:if test="${orderOfEnvs[orderOfEnvs.indexOf(envsHeader)+1] != null}">
	 
																   <j:if test="${comp.indexOf('Backend') == -1}">
																		<j:switch on="${deployment.get('buildstatus')}">
																			<j:case value="SUCCESS">
																				 <a title="Promote" href="javascript:showClientDepDynamicDialog('${comp}','${orderOfEnvs[orderOfEnvs.indexOf(envsHeader)+1]}','${deployment.get('buildNum')}');">Promote</a>
																			</j:case>
																			<j:case value="FAILURE">
																				 <a title="Promote" href="javascript:void(0)" class="disabled">Promote</a>
																			</j:case>
																			<j:case value="RUNNING">
																				 <a title="Promote" href="javascript:void(0)" class="disabled">Promote</a>
																			</j:case>
																			<j:default>																	
																				  <a title="Promote" href="javascript:void(0)" class="disabled">Promote</a>
																			</j:default>
																		</j:switch>
																	</j:if>	
																	<j:if test="${comp.indexOf('Backend') != -1}">
																	
																			<j:switch on="${deployment.get('buildstatus')}">
																			<j:case value="SUCCESS">
																				 <a title="Promote" href="javascript:showBackendDepDynamicDialog('${comp}','${orderOfEnvs[orderOfEnvs.indexOf(envsHeader)+1]}','${deployment.get('buildNum')}');">Promote</a>
																			</j:case>
																			<j:default>																
																				  <a title="Promote" href="javascript:void(0)" class="disabled">Promote</a>
																			</j:default>
																		</j:switch>
																		
																	</j:if> 
																	
																</j:if> 
															 
														 </code>
														</td>
														<td>
															<j:switch on="${deployment.get('buildstatus')}">
																<j:case value="SUCCESS">
																	<span title="SUCCESS" style="color:green;">&#10004;</span>
																</j:case>
																<j:case value="FAILURE">
																	<span title="FAILURE" style="color:darkred;">&#x2716;</span>
																</j:case>
																<j:case value="RUNNING">
																	<span title="RUNNING" style="color:blue;">&#9658;</span>
																</j:case>
																<j:default>
																	<span title="UNKNOWN" style="color:orange;">&#63;</span>
																</j:default>
															</j:switch>
														</td>
														<td>
															<a title="View Deployment" href="${deployment.get('jobUrl')}">${it.getNiceTimeStamp(deployment.get('created_at'))}</a>
														</td>
													</tr>
											</j:forEach>	  
										</table>
									</div>
								</j:forEach>


								<!-- Component History -->
								<j:forEach items="${orderOfComps}" var="comp">
									<j:set var="compLastDeployed" value="${it.getCompLastDeployed(envsHeader, comp)}"/>
									<div id="${comp}_History" style="display: inline-block; position: fixed; top: 100; bottom: 100; left: 0; right: 0; width: 900px; height: 600px; position:fixed; margin: auto; padding: 10px; background-color: #FEFEFE; border: 1px solid; border-color: #DDDDDD; box-shadow: 1px 2px 1px #AAAAAA; border-radius: 15px; display:none; overflow: auto; overflow-x:hidden;">
										<div align="right">
											<b onclick="javascript:hideAll()" style="cursor: pointer">[X]</b>
										</div>
										<h3>${comp} History</h3>
										 <table class="table table-bordered table-striped table-condensed">
											<tbody>
												<th style="text-align:center">Env</th>
												<th style="text-align:center">Build</th>
												<th style="text-align:center">Status</th>
												<j:if test="${compLastDeployed.get('packageName') != null &amp;&amp; !compLastDeployed.get('packageName').equals('')}">
													<th style="text-align:center">Package</th>
												</j:if>
												<th style="text-align:center">Time</th>
											</tbody>
											
											<j:forEach items="${it.getDeploymentsByComp(comp, limitDeploy)}" var="deployment">
												<tr>
													<td>
														${deployment.get('envName')}
													</td>
													<td>
														<a title="View Deployment" href="${deployment.get('jobUrl')}">${deployment.get('buildNum')}</a>
													</td>
													<td>
														<j:switch on="${deployment.get('buildstatus')}">
															<j:case value="SUCCESS">
																<span title="SUCCESS" style="color:green;">&#10004;</span>
															</j:case>
															<j:case value="FAILURE">
																<span title="FAILURE" style="color:darkred;">&#x2716;</span>
															</j:case>
															<j:case value="RUNNING">
																<span title="RUNNING" style="color:blue;">&#9658;</span>
															</j:case>
															<j:default>
																<span title="UNKNOWN" style="color:orange;">&#63;</span>
															</j:default>
														</j:switch>
													</td>
													<j:if test="${compLastDeployed.get('packageName') != null &amp;&amp; !compLastDeployed.get('packageName').equals('')}">
														<td>
															${deployment.get('packageName')}
														</td>
													</j:if>
													<td>
														<a title="View Deployment" href="${deployment.get('jobUrl')}">${it.getNiceTimeStamp(deployment.get('created_at'))}</a>
													</td>
												</tr>
											</j:forEach>	  
										</table>
									</div>
								</j:forEach>
							</th>
						</j:forEach>
					</tr>


					<!-- Main dashboard -->
					<j:forEach items="${orderOfComps}" var="comps">
						<tr>
							<td align="center"><strong><a href="javascript:toggle('${comps}_History')">${comps}</a></strong></td>
							<j:forEach items="${orderOfEnvs}" var="env">
								<j:set var="deployment" value="${it.getCompLastDeployed(env, comps)}"/>
								<j:if test="${!deployment.isEmpty()}">
									<j:switch on="${deployment.get('buildstatus')}">
										<j:case value="SUCCESS">
											<j:set var="bgcol" value="#DAF5DA;"/>
											<j:set var="clss" value="notused"/>
											<j:set var="extn" value=""/>
										</j:case>
										<j:case value="FAILURE">
											<j:set var="bgcol" value="#FF6666;"/>
											<j:set var="clss" value="notused"/>
											<j:set var="extn" value=""/>
										</j:case>
										<j:case value="RUNNING">
											<j:set var="bgcol" value="#ffffff;"/>
											<j:set var="clss" value="deploying"/>
											<j:set var="extn" value="console"/>
										</j:case>
										<j:default>
											<j:set var="bgcol" value="#eccf97;"/>
											<j:set var="clss" value="notused"/>
											<j:set var="extn" value="console"/>
										</j:default>
									</j:switch>
								</j:if>

								<td class="${clss}" style="background-color:${bgcol} padding 1.5% 1.5%;" align="center">
									<j:if test="${!deployment.isEmpty()}">
										<a style="text-decoration:none; color:blue; font-size:medium;" title="View" href="javascript:toggle('${comps}_${env}_Popup');">
											<strong>
												<j:if test="${deployment.get('packageName').equals('') || deployment.get('packageName') == null}">${deployment.get('buildNum')}</j:if>
												<j:if test="${!deployment.get('packageName').equals('') &amp;&amp; deployment.get('packageName') != null}">${deployment.get('packageName')}</j:if>
												<j:switch on="${deployment.get('buildstatus')}">
													<j:case value="SUCCESS">
														<span title="SUCCESS" style="color:green;">&#10004;</span>
													</j:case>
													<j:case value="FAILURE">
														<span title="FAILURE" style="color:darkred;">&#x2716;</span>
													</j:case>
													<j:case value="RUNNING">
														<span title="RUNNING" style="color:blue;">&#9658;</span>
													</j:case>
													<j:default>
														<span title="UNKNOWN" style="color:orange;">&#63;</span>
													</j:default>
												</j:switch>
											</strong>
										</a>
										<div align="right">
											<code>
												<a style="font-size:small; text-decoration:none;" title="View Deployment" href="${deployment.get('jobUrl')}${extn}">[${it.getNiceTimeStamp(deployment.get('created_at'))}]</a>
											</code>
										</div>
										<div align="right">
											<code>
												<j:if test="${orderOfEnvs[orderOfEnvs.indexOf(env)+1] != null}">
													<j:if test="${orderOfEnvs.indexOf(env) != 0}">
														
														 <head>
															<style>									
															a.disabled {
															  color:grey;
															}
															</style>
															   </head>
															<j:if test="${comps.indexOf('Backend') == -1}">
															<j:switch on="${deployment.get('buildstatus')}">
																<j:case value="SUCCESS">
																	 <a title="Promote" href="javascript:showClientDepDynamicDialog('${comps}','${orderOfEnvs[orderOfEnvs.indexOf(env)+1]}','${deployment.get('buildNum')}');">Promote${it.envVars}</a>
																</j:case>
																<j:default>																	
																	  <a title="Promote" href="javascript:void(0)" class="disabled">Promote</a>
																</j:default>
															 </j:switch>
																
															</j:if>	
															
															<j:if test="${comps.indexOf('Backend') != -1}">  
												
																<j:switch on="${deployment.get('buildstatus')}">
																	<j:case value="SUCCESS">
																		<a title="Promote" href="javascript:showBackendDepDynamicDialog('${comps}','${orderOfEnvs[orderOfEnvs.indexOf(env)+1]}','${deployment.get('buildNum')}');">Promote</a>
																	</j:case>
																	<j:default>																	
																		<a title="Promote" href="javascript:void(0)" class="disabled">Promote</a>
																	</j:default>
																</j:switch>

																
															</j:if> 
														 
													</j:if> 
												</j:if>
											</code>
										</div>
									</j:if>
									<j:if test="${orderOfEnvs.indexOf(env) == 0}">
										
										<j:forEach items="${orderOfEnvs}" var="env_promote">


											<!-- don't promote to itself -->
											<j:if test="${env_promote != env}">
											
												
												
												   <!-- DROPDOWN MENUS FOR PERFORMING BACKEND DEPLOYMENTS under 'Last Commit' column-->
												   
													<j:if test="${comps.indexOf('Backend') != -1}">  
													
														 <j:set var="SpaceIndex" value="${comps.indexOf(' ',1)}"/>
														 <j:set var="client" value="${comps.substring(0,SpaceIndex)}"/>
														 <j:set var="lastcommit" value="${it.getCompLastDeployed('Last Commit', client)}"/>
													 
															
														<div class="dropdown" style="float:right;">
																<button class="dropbtn" >Deploy to ${env_promote}...</button>
														  <div id="myDropdown${env_promote}" class="dropdown-content">
															<code>
																<j:forEach items="${tags}" var="tag">
																	<j:if test="${env_promote == 'DEV'}">
																		<j:if test="${lastcommit.get('buildstatus') != 'SUCCESS'}">
																			<a href="javascript:void(0)" class="disabled">${tag}</a>
																		</j:if>
																	</j:if>
																	<j:if test="${env_promote != 'DEV' || lastcommit.get('buildstatus') == 'SUCCESS'}">
																		<a href="javascript:showBackendDepDynamicDialog(  '${comps}','${env_promote}', '${tag}');">${tag}</a>
																	</j:if>
																</j:forEach>
															</code>
														  </div>
														</div>
													</j:if>
													
													<!-- PROMOTE LINKS under 'Last Commit' column -->
													<j:if test="${comps.indexOf('Backend') == -1}"> 
														<div style="margin-right:30px; float:right;">
															<j:switch on="${deployment.get('buildstatus')}">
																<j:case value="SUCCESS">
																	  <a href="javascript:javascript:showClientDepDynamicDialog('${comps}','${env_promote}','${deployment.get('buildNum')}');">Promote to ${env_promote}</a>
																</j:case>
																<j:default>																	
																	  <a href="javascript:void(0)" class="disabled">Promote to ${env_promote}</a>												
																</j:default>
															</j:switch>
														</div>	
														
													  											
													</j:if>
												
											</j:if>
										</j:forEach>
									</j:if>
								</td>
							</j:forEach>
						</tr>
					</j:forEach>

					<script language="javascript">
											
						//Hide the dynamic dialog initially after the page loads					
						Q(document).ready(function(){
						
							Q("#overlay, #dialog, #ClientRevisionSection, #non-dev-env, #PRDsection").hide();
							
							var validationObj = Q("#dialog").validate({ // initialize the plugin
								rules: {
									ClientRevision: {
										minlength: 40,
										maxlength: 40
									}
								},
								messages: {
									ClientRevision: "value needs to be 40 characters long"
								}
							});
							
							validationObj.form();
							
							Q("#submit").click(function(){
							
								//calculate seconds so we know when the jenkins build needs to be triggered
								var futureDateTime = new Date(Q("#datetimepicker").val());
								var now = new Date();
								var diff = Math.round((futureDateTime - now)/1000);
								Q("#secondsToWait").val(diff);
								alert(Q("#secondsToWait").val());
							
								if (Q("#build_num").val().length != 0 &amp;&amp; Q("#core_version").val().length == 0)
								{
									startJob(Q("#clientAcronym").val(),Q("#environment").val(),Q("#build_num").val());
								}
								else
								{
																		
									validateTheForm();
								}
							});
							
							Q("#reset").click(function(){
								Q("#dialog").trigger("reset");
								Q("#ClientRevisionValidation").empty();
								Q("#ClientRevisionSection").hide();
								
							});
							
							Q("#cancel").click(closeDynamicDialog);
							Q("#ClientRevisionDecision").change(CheckClientRevisionDecision);
							
							
							Q("#datetimepicker").datetimepicker();
							
						});
					
						function validateTheForm()
						{
							var proceed = false;
							var SHA_length = 40; //SHA value should always be 40 characters long
							
							if (Q("#ClientRevisionDecision").val() == "yes")
							{
								
								//alert(Q("#ClientRevision").val().length);
								
								if (Q("#ClientRevision").val().length != SHA_length) 
								{
									Q("#ClientRevisionValidation").text("It looks like some characters are missing since SHA value should be 40 characters long. Please enter the correct value.");
									Q("#ClientRevisionValidation").css("color", "red");
									Q("#ClientRevision").focus();
								}
								else
								{
									Q("#ClientRevisionValidation").text("Input OK");
									Q("#ClientRevisionValidation").css("color", "green");
									proceed = true;
								}
								
								
							}
							else
							{
								proceed = true;
							}
							
							if (proceed == true)
							{
								startJobBackendDeploy(Q("#clientAcronym").val(),Q("#environment").val(),Q("#core_version").val());
							}
						}
					
						function closeDynamicDialog()
						{
							
							Q("#overlay, #dialog, #ClientRevisionSection, #non-dev-env, #PRDsection").hide();
							
							//Reset values and selections of html elements
							Q("#dialog").trigger("reset");
							Q("#ClientRevisionValidation").empty();
						}
					
						
						function showBackendDepDynamicDialog(comp, env, coreVersion) 
						{ 
							//alert( "You are running jQuery version: " + Q.fn.jquery );
							//alert(Q().jquery); //it is 1.7.2
							
							 Q("#overlay, #dialog").show();

							 if (env != "DEV")
							 {
								Q("#non-dev-env").show();
								
								if (env == "PRD")
								{
									Q("#PRDsection").show();
								}
							 }
							
							 //Set the html elements
							 var compSubstr = comp.substring(0, comp.indexOf(' '))
							 Q("#dialogTitle").text("Backend deploy " + compSubstr + " to " + env + " for " + coreVersion);
							 Q("#clientAcronym").val(comp);
							 Q("#environment").val(env);
							 Q("#core_version").val(coreVersion);
							 Q("#secondsToWait").val(0);
							 
							 
						}
						
						function CheckClientRevisionDecision()
						{
							if (Q("#ClientRevisionDecision").val() == "yes")
							{
								Q("#ClientRevisionSection").show(500);
								
							}
							else
							{
								Q("#ClientRevisionSection").hide(500);
							}
						}
						
						function startJobBackendDeploy(comp, env, coreVersion)
						{
							//alert(comp);
							//alert(env);
							//alert(coreVersion);
							//alert(Q("#ClientRevision").val());
							
							var compSubstr = comp.substring(0, comp.indexOf(' '))
							
							
							if (coreVersion != null) 
							{
								var SpaceIndex = comp.indexOf(" ", 1);														 
								var client = comp.substring(0, SpaceIndex);
								var xmlHttp = new XMLHttpRequest();
								var baseUrl = "/job/Backend_Deploy";
								var buildUrl = "";
								var r_on_rev = false;
								var norollback = false;
								var SHA_length = 40; //SHA value should always be 40 characters long
								
								if (env != "DEV")
								{
									//Check if custom client revision was provided
									if (Q("#ClientRevisionDecision").val() == "yes" &amp;&amp; Q("#ClientRevision").val().length == SHA_length) 
									{
										r_on_rev = true;
										//Get SHA value
										ClientRevision = Q("#ClientRevision").val();
											
										//specify custom SHA value
										buildUrl = baseUrl + "/buildWithParameters?CoreVersion=" + coreVersion + "&amp;Client=" + compSubstr + "&amp;Env=" + env + "&amp;ClientRevision=" + ClientRevision + "&amp;delay=" + Q("#secondsToWait").val() + "sec";

									}
								
								}
								
								
								//Custom SHA is not needed
								if (r_on_rev == false)
								{
									buildUrl = baseUrl + "/buildWithParameters?CoreVersion=" + coreVersion + "&amp;Client=" + compSubstr + "&amp;Env=" + env + "&amp;delay" + Q("#secondsToWait").val() + "sec";
								}
								
								
								//Check if no auto-rollback was checked
								<!--if (Q("#norollback").is(":checked"))--> //working statement but prefer below approach instead
								if (Q("#norollback").prop("checked"))
								{
									norollback = true;
									var norollbackFlag = "-no_rollback";
								}
								
																
								//Post request if custom SHA is not needed or when user decided to provide a specific client revision (SHA value)
								if (r_on_rev == false || (r_on_rev == true &amp;&amp; ClientRevision != null))
								{
								
									if (r_on_rev == false &amp;&amp; norollback == true)
									{
										buildUrl = baseUrl + "/buildWithParameters?CoreVersion=" + coreVersion + "&amp;Client=" + compSubstr + "&amp;Env=" + env + "&amp;NoRollback=" + norollbackFlag + "&amp;delay" + Q("#secondsToWait").val() + "sec";
										
									}
									
									if (r_on_rev == true &amp;&amp; ClientRevision != null &amp;&amp; norollback == true)
									{
										buildUrl = baseUrl + "/buildWithParameters?CoreVersion=" + coreVersion + "&amp;Client=" + compSubstr + "&amp;Env=" + env + "&amp;ClientRevision=" + ClientRevision + "&amp;NoRollback=" + norollbackFlag + "&amp;delay" + Q("#secondsToWait").val() + "sec";
										
									}
								
									closeDynamicDialog();
									xmlHttp.open("POST", buildUrl, true); // true for asynchronous 
									xmlHttp.send(null);
									window.location.replace(baseUrl);
								}
									
							}
							
							
						}

						
						function showClientDepDynamicDialog(comp, env, buildNum) 
						{

							 Q("#overlay, #dialog").show();

							 //Set the html elements
							 Q("#dialogTitle").text("Deploying " + comp + " to " + env + " for " + buildNum);
							 Q("#clientAcronym").val(comp);
							 Q("#environment").val(env);
							 Q("#build_num").val(buildNum);
							 Q("#secondsToWait").val(0);
						
						}
						
						function startJob(comp, env, buildNum)
						{
							
							var xmlHttp = new XMLHttpRequest();
							var baseUrl = "/job/Client_Deploy";
							var buildUrl = "";
							var norollback = false;
							
							//Check if no auto-rollback was checked
							if (Q("#norollback").prop("checked"))
							{
								norollback = true;
								var norollbackFlag = "-no_rollback";
								buildUrl = baseUrl + "/buildWithParameters?SourceBuildID=" + buildNum + "&amp;Client=" + comp + "&amp;Env=" + env + "&amp;NoRollback=" + norollbackFlag + "&amp;delay" + Q("#secondsToWait").val() + "sec";
							}
							else
							{
								buildUrl = baseUrl + "/buildWithParameters?SourceBuildID=" + buildNum + "&amp;Client=" + comp + "&amp;Env=" + env + "&amp;delay" + Q("#secondsToWait").val() + "sec";
							}
							
							closeDynamicDialog();
							xmlHttp.open("POST", buildUrl, true); // true for asynchronous 
							xmlHttp.send(null);
							window.location.replace(baseUrl);
							
						}

						function reloadPage()
						{
							location.reload(true);
						}

						function filterTable() {
						  var input, filter, table, tr, td, i, hd, htmlElementNode;
						  input = document.getElementById("searchInput");
						  filter = input.value.toUpperCase();
						  table = document.getElementById("envDashboard");
						  tr = table.rows;
						  for (i = 0; i &lt; tr.length; i++) {
						    td = tr[i].getElementsByTagName("td")[0];
						    th = tr[i].getElementsByTagName("th")[0];


						    if (td &amp;&amp; !th) {
						      if (td.innerHTML.toUpperCase().indexOf(filter) &gt; -1) {
						        tr[i].style.display = "";
						      } else {
						        tr[i].style.display = "none";
						      }
						    }       
						  }
						}
						
						function toggle(showHideDiv) {
							hideAll()
							var ele = document.getElementById(showHideDiv);
							if(ele.style.display == "block") {
								ele.style.display = "none";
							}
							else {
								ele.style.display = "block";
							}
						}

						function hideAll() {
							Q(".overlay, .popup, .dropdown").fadeToggle();
							var divs = document.getElementsByTagName("div");
							var tableDivs = new Array();
							for (var i = 0; i &lt; divs.length; i++) {
								if (divs[i].id.match("_History") != null || divs[i].id.match("_Popup") || divs[i].id.match("pop")) {
									tableDivs.push(divs[i]);
								}
							}

							var envs = tableDivs.length;
							for (i = 0; i &lt; envs; i++) {
								var ele = tableDivs[i];
								if(ele.style.display == "block") {
									ele.style.display = "none";
								}
							}

						}
						
						
						
					</script>
				</j:case>
			</j:switch>
		</tbody>
	</table>
</div>
<div id="overlay" style="display:none;"></div>
<form id="dialog" style="display:none;">
	<p id="dialogTitle">Placeholder for Deployment Information</p>

	<label id="datetimepickerLabel">Jira Ticket</label>
	<div class="divider"/>
	<input id="jiraticket" type="text"/>
	
	<div id="non-dev-env" style="text-align: left"> 
	<label id="ClientRevisionLabelQuestion">Do you want to provide specific client revision with this backend deployment?</label>
    <div class="divider"/>
	<select id="ClientRevisionDecision">
	<option value="empty"></option>
    <option value="no">No</option>
    <option value="yes">Yes</option>
    </select>
	</div>
	
	<div id="ClientRevisionSection">
	<label id="requestforSHA">Please enter SHA value of client revision (please make sure the build is stable) to use with this backend deployment</label><br></br>
	<div style="text-align: left">
	<label id="ClientRevisionLabel">Client revision</label>
	<div class="divider"/>
	<!--<input type="text" id="ClientRevision"/><br></br>-->
	<input type="text" id="ClientRevision" name="ClientRevision"/><br></br>
	</div>
	<label id="ClientRevisionDescriptionLabel">SHA value (checksum hash represented as 40 digits long hexadecimal number which is a GitHub commit) and represents a client version to deploy after core deployment completes</label><br></br>
	<p id="ClientRevisionValidation"></p>
	</div>
	
	<br></br>
	<label class="container">Do not perform auto-rollback upon failed deployment
	<input type="checkbox" id="norollback"></input>
	<span class="checkmark"></span>
	</label>
		
	<div id="PRDsection">
	<label class="container">Start change request job
	<input type="checkbox" id="startcrjob"></input>
	<span class="checkmark"></span>
	</label>
	<label class="container">Start nightly job
	<input type="checkbox" id="startnj"></input>
	<span class="checkmark"></span>
	</label>
	<label id="njstartstepLabel">Nightly job start step</label>
	<div class="divider"/>
	<input type="text" id="njstartstep"/><br></br>
	<label id="datetimepickerLabel">Deployment kick off</label>
	<div class="divider"/>
	<input id="datetimepicker" type="text"/>
	</div>
	
	
	<input type="hidden" id="clientAcronym" value=""/>
	<input type="hidden" id="environment" value=""/>
	<input type="hidden" id="core_version" value=""/>
	<input type="hidden" id="build_num" value=""/>
	<input type="hidden" id="secondsToWait" value=""/>
	
	<br></br>
	<br></br>
	<br></br>
	<div id="buttons" style="text-align: right">
	<span id="submit">Submit</span>
	<div class="divider"/>
	<span id="reset">Reset</span>
	<div class="divider"/>
	<span id="cancel">Cancel</span>
	</div>
	
</form>
</j:jelly>